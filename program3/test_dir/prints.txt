//prints out arguments from the args list; temporary
// int j;
// printf("Args: ");
// for(j = 0; j < 3; j++) {
//     printf("%s ",args[j]);
// }
// printf("\n");

           // if(strcmp(args[0], "#") == 0) { //checks array for
            //     for(int i = 0; i < num_line_elements; i++) {
            //         args[i] = NULL;
            //     }

            //     num_line_elements = 0; //reset
            //     continue;
            // }

            //else {

                //print tests
                // printf("Number of elements: %d\n", num_line_elements);
                // fflush(stdout);
                // printf("Ending index: %d\n", end_index);
                // fflush(stdout);
                // printf("Input file descriptor: %d\n", ifile_desc);
                // fflush(stdout);
                // printf("Output file descriptor: %d\n", ofile_desc);
                // fflush(stdout);
            //}
                bg_pids[pids_counter - 1] = spawnpid;
                //printf("Spawnpid: %d\n", bg_pids[pids_counter - 1]);

                // printf("# of bg pids is %d\n", pids_counter);
                // fflush(stdout); //clears stdout buffer 

                // for (int i = 0; i < pids_counter; i++) {
                //     printf("PIDPP: %d\n", bg_pids[i]);
                //     fflush(stdout);
                // }